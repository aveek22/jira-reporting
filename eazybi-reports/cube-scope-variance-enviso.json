{
    "application_type": "sql",
    "application_params": {
        "source_params": {
            "adapter": "sqlserver",
            "host": "10.16.1.9",
            "database": "JIRA_DEV",
            "username": "usrReadWrite",
            "incremental": null,
            "sql": "/*\r\n\tScript:\t\t\tenviso-scope-variance-kpi-script.sql\r\n\tAuthor:\t\t\tAveek Das\r\n\tDescription:\tThis script is used to create a data cube in EazyBI on which multiple reports\r\n\t\t\t\t\tcan be developed. These reports are to be used by the management team to \r\n\t\t\t\t\tmanage and streamline the ongoing processes.\r\n\tDate:\t\t\t03-Dec-2019\r\n\r\n*/\r\n\r\n----------------------------------------------------------------------------------------------------\r\n-- Bringing in the data for ProjectKey and ProjectCategories\r\n-- There is no direct relationship between these two entities\r\n-- Need to use the intermediate bridge table NodeAssociation to fetch the same\r\n----------------------------------------------------------------------------------------------------\r\nWITH cte_ProjectCategory AS (\r\n    SELECT \r\n        [project].[pname]\t\t\tAS ProjectName\r\n        ,[project].[pkey]\t\t\tAS ProjectKey\r\n        ,[projectcategory].[cname]\tAS ProjectCategory\r\n    FROM [jiraschema].[project]\r\n    INNER JOIN [jiraschema].[nodeassociation] ON [nodeassociation].[source_node_id] = [project].[id]\r\n    INNER JOIN [jiraschema].[projectcategory] ON [nodeassociation].[sink_node_id] = [projectcategory].[id]\r\n    WHERE 1=1\r\n    AND ProjectCategory.cname IN ('NG_APP','NG_CORE')\r\n    AND [nodeassociation].[association_type] = 'ProjectCategory'\r\n)\r\n----------------------------------------------------------------------------------------------------\r\n-- This CTE fetches the StoryPoints for all the Epics\r\n-- irrespective of the projects (i.e. NG+RCX+DEV+...)\r\n\r\n-- PS: In order to fetch only related Epics for NG, need to introduce INNER JOINs with JiraIssue and Project\r\n-- which might be costlier than bringing in all data without filtering...\r\n-- 13503 is the CustomFieldID for EpicStoryPoints\r\n----------------------------------------------------------------------------------------------------\r\n ,cte_EpicStoryPoints AS (\r\n     SELECT \r\n         [ISSUE]        \t\t\tAS IssueID\r\n         ,ISNULL([NUMBERVALUE],0)  \tAS EpicStoryPoints \r\n     FROM [jiraschema].[customfieldvalue]\r\n     WHERE [customfieldvalue].[customfield] = 13503\t\r\n )\r\n ----------------------------------------------------------------------------------------------------\r\n -- Not using Sprint Details as of now since Epics are not planned in Sprint\r\n ----------------------------------------------------------------------------------------------------\r\n /*,cte_SprintDetails AS (\r\n\tSELECT \r\n\t\t[customfieldvalue].[Issue]\tAS IssueID\r\n\t\t,[AO_60DB71_SPRINT].[Name]\tAS SprintName\r\n\tFROM jiraschema.customfieldvalue \r\n\tINNER JOIN jiraschema.AO_60DB71_SPRINT ON AO_60DB71_SPRINT.ID = customfieldvalue.STRINGVALUE\r\n\tWHERE 1=1\r\n\tAND [customfieldvalue].[customfield] = 10005 \r\n\tAND [AO_60DB71_SPRINT].[Name] LIKE 'NG%'\r\n )*/\r\n ----------------------------------------------------------------------------------------------------\r\n -- Not using IssueFixVersion as we are extracting version information from the dedicated fields:\r\n -- * PMO Planned Portfolio Version\r\n -- * PMO Planned App Version\r\n ----------------------------------------------------------------------------------------------------\r\n ,cte_IssueFixVersion AS (\r\n\tSELECT \r\n\t\tnodeassociation.SOURCE_NODE_ID\t\t\t\t\tAS IssueID\r\n\t\t,[projectversion].[vname]\t\t\t\t\t\tAS [Version]\r\n\t\t,CASE \r\n\t\t\tWHEN [projectversion].[released] = 'true' THEN 'Released' ELSE 'Archived'\r\n\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\tAS VersionStatus\r\n\tFROM jiraschema.nodeassociation\r\n\tLEFT OUTER JOIN jiraschema.projectversion ON nodeassociation.sink_node_id  = projectversion.id\r\n\tWHERE nodeassociation.ASSOCIATION_TYPE = 'IssueFixVersion'\r\n )\r\n ----------------------------------------------------------------------------------------------------\r\n -- Building the PlannedPortfolioVersion table by extracting the Label value\r\n ----------------------------------------------------------------------------------------------------\r\n ,cte_PortfolioVersions AS (\r\n\tSELECT\r\n\t\tIssue\tAS IssueID\r\n\t\t,Label\tAS PortfolioVersionLabel\r\n\t\t,CONCAT(\r\n\t\t\tSUBSTRING([label].[Label],LEN([label].[Label])-1,1)\r\n\t\t\t,'.'\r\n\t\t\t,SUBSTRING([label].[Label],LEN([label].[Label]),1)\r\n\t\t\t,'.0'\r\n\t\t)\t\tAS PortfolioVersion\r\n\tFROM [jiraschema].[label]\r\n\tWHERE 1=1\r\n\tAND [FieldID] IN (20901) -- 20901 = PMO Planned Portfolio Version\r\n)\r\n  ----------------------------------------------------------------------------------------------------\r\n-- Building the PlannedAppVersion table by extracting the Label value\r\n----------------------------------------------------------------------------------------------------\r\n,cte_AppVersions AS (\r\n\tSELECT\r\n\t\tIssue\tAS IssueID\r\n\t\t,Label\tAS AppVersionLabel\r\n\t\t,CONCAT(\r\n\t\t\tSUBSTRING([label].[Label],LEN([label].[Label])-2,1)\r\n\t\t\t,'.'\r\n\t\t\t,SUBSTRING([label].[Label],LEN([label].[Label])-1,1)\r\n\t\t\t,'.'\r\n\t\t\t,SUBSTRING([label].[Label],LEN([label].[Label]),1)\r\n\t\t)\t\tAS AppVersion\r\n\tFROM [jiraschema].[label]\r\n\tWHERE 1=1\r\n\tAND [FieldID] IN (20900) -- 20900 = PMO Planned App Version\r\n)\r\n ----------------------------------------------------------------------------------------------------\r\n ----------------------------------------------------------------------------------------------------\r\nSELECT \r\n\t[jiraissue].[ID]\t\t\t\t\t\t\t\t\t\t\t\tAS [IssueID]\r\n    ,CONCAT([project].[pkey],'-',[jiraissue].[issuenum])\t\t\tAS [IssueKey]\r\n\t,[issuetype].[pname]\t\t\t\t\t\t\t\t\t\t\tAS [IssueType]\r\n\t,CASE \r\n\t\tWHEN [priority].[pname] = 'Must'\tTHEN 1\r\n\t\tWHEN [priority].[pname] = 'Should'\tTHEN 2\r\n\t\tWHEN [priority].[pname] = 'Could'\tTHEN 3\r\n\t\tWHEN [priority].[pname] = 'Would'\tTHEN 4\r\n\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [IssuePriorityKey]\r\n\t,[priority].[pname]\t\t\t\t\t\t\t\t\t\t\t\tAS [IssuePriority]\r\n\t,[issuestatus].[pname]\t\t\t\t\t\t\t\t\t\t\tAS [IssueStatus]\r\n\t,CASE \r\n\t\tWHEN [cte_ProjectCategory].[ProjectCategory] LIKE '%RCX%'\t\r\n\t\t\tTHEN 'ReCreateX'\r\n\t\tWHEN [cte_ProjectCategory].[ProjectCategory] LIKE '%NG%'\t\r\n\t\t\tTHEN 'Enviso'\r\n\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Portfolio]\r\n\t,[cte_PortfolioVersions].[PortfolioVersionLabel]\t\t\t\tAS [PortfolioVersionLabel]\r\n\t,CONCAT(\r\n\t\tCASE \r\n\t\t\tWHEN [cte_ProjectCategory].[ProjectCategory] LIKE '%RCX%'\t\r\n\t\t\t\tTHEN 'ReCreateX'\r\n\t\t\tWHEN [cte_ProjectCategory].[ProjectCategory] LIKE '%NG%'\t\r\n\t\t\t\tTHEN 'Enviso'\r\n\t\tEND\r\n\t\t,' '\r\n\t\t,[cte_PortfolioVersions].[PortfolioVersion]\t\t\t\t\t\r\n\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [PortfolioVersion]\r\n\t--,[cte_PortfolioVersions].[PortfolioVersion]\t\t\t\t\t\tAS [PortfolioVersion]\r\n    ,[cte_ProjectCategory].[ProjectCategory]\t\t\t\t\t\tAS [Category]\r\n\t,[project].[pname]\t\t\t\t\t\t\t\t\t\t\t\tAS [App]\r\n\t,[cte_AppVersions].[AppVersionLabel]\t\t\t\t\t\t\tAS [AppVersionLabel]\r\n\t,CONCAT(\r\n\t\t[project].[pname]\r\n\t\t,' '\r\n\t\t,[cte_AppVersions].[AppVersion]\r\n\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [AppVersion]\r\n\t--,[cte_AppVersions].[AppVersion]\t\t\t\t\t\t\t\t\tAS [AppVersion]\r\n\t----[cte_IssueFixVersion].[VersionStatus]\t\t\t\tAS VersionStatus,\r\n\t--,[cte_IssueFixVersion].[Version]\t\t\t\t\t\t\t\tAS VersionOriginal\r\n\t--CASE \r\n\t--\tWHEN [cte_IssueFixVersion].[Version] IS NULL\r\n\t--\tTHEN CONCAT(\r\n\t--\t\tSUBSTRING([label].[Label],LEN([label].[Label])-2,1)\r\n\t--\t\t,'.'\r\n\t--\t\t,SUBSTRING([label].[Label],LEN([label].[Label])-1,1)\r\n\t--\t\t,'.'\r\n\t--\t\t,SUBSTRING([label].[Label],LEN([label].[Label]),1)\r\n\t--\t)\r\n\t--\tELSE [cte_IssueFixVersion].[Version] \r\n\t--END\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Version],\r\n\t----[cte_SprintDetails].[SprintName]\t\t\t\t\tAS [SprintName],\r\n    ,ISNULL([cte_EpicStoryPoints].[EpicStoryPoints],0)\t\t\t\tAS [StoryPointsPlanned]\r\n\t,CASE \r\n\t\tWHEN [issuestatus].[pname] IN ('CLOSED','Awaiting Release')\r\n\t\tTHEN ISNULL([cte_EpicStoryPoints].[EpicStoryPoints],0)\r\n\t\tELSE 0\r\n\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [StoryPointsDelivered]\r\nFROM\t\t[jiraschema].[jiraissue]\r\nINNER JOIN\t[jiraschema].[project]\t\t\tON [project].[id]\t\t\t\t\t\t= [jiraissue].[project]\r\nINNER JOIN\t[cte_ProjectCategory]\t\t\tON [cte_ProjectCategory].[ProjectKey]\t= [project].[pkey]\r\nINNER JOIN\t[jiraschema].[issuetype]\t\tON [issuetype].[id]\t\t\t\t\t\t= [jiraissue].[issuetype]\r\nINNER JOIN\t[jiraschema].[priority]\t\t\tON [priority].[id]\t\t\t\t\t\t= [jiraissue].[priority]\r\nINNER JOIN\t[jiraschema].[issuestatus]\t\tON [issuestatus].[id]\t\t\t\t\t= [jiraissue].[issuestatus]\r\nINNER JOIN\t[cte_PortfolioVersions]\t\t\tON [cte_PortfolioVersions].[IssueID]\t= [jiraissue].[ID]\r\nINNER JOIN\t[cte_AppVersions]\t\t\t\tON [cte_AppVersions].[IssueID]\t\t\t= [jiraissue].[ID]\r\nINNER JOIN\t[cte_EpicStoryPoints]\t\t\tON [cte_EpicStoryPoints].[IssueID]\t\t= [jiraissue].[ID]\r\n--INNER JOIN\t[cte_IssueFixVersion]\t\t\tON [cte_IssueFixVersion].[IssueID]\t\t= [jiraissue].[id]\r\n--LEFT OUTER JOIN cte_SprintDetails ON cte_SprintDetails.IssueID = jiraissue.ID\r\nWHERE 1 = 1\r\nAND [jiraissue].[issuetype]\tIN (7)\t\t\t\t\t\t\t\t\t\t\t-- 7=Epic\r\nAND [jiraissue].[priority]\tIN (10000,10001,10002,10003)\t\t\t\t\t-- Must,Should,Could,Would\r\n--AND [jiraissue].[issuenum] = 2921"
        },
        "extra_options": {
            "regular_import_frequency": 600,
            "regular_import_at": "",
            "time_zone": "Chennai"
        }
    },
    "source_cube_name": "ScopeVariance_Enviso",
    "columns": [
        {
            "name": "IssueID",
            "data_type": "integer",
            "dimension": "Issue",
            "key_column": true
        },
        {
            "name": "IssueKey",
            "data_type": "string",
            "dimension": "Issue",
            "name_column": true
        },
        {
            "name": "IssueType",
            "data_type": "string"
        },
        {
            "name": "IssuePriorityKey",
            "data_type": "integer",
            "dimension": "Priority",
            "key_column": true,
            "ordinal_column": true
        },
        {
            "name": "IssuePriority",
            "data_type": "string",
            "dimension": "Priority",
            "name_column": true
        },
        {
            "name": "IssueStatus",
            "data_type": "string"
        },
        {
            "name": "Portfolio",
            "data_type": "string",
            "dimension": "Portfolio",
            "dimension_level": "Portfolio"
        },
        {
            "name": "PortfolioVersionLabel",
            "data_type": "string"
        },
        {
            "name": "PortfolioVersion",
            "data_type": "string",
            "dimension": "Portfolio",
            "dimension_level": "Version"
        },
        {
            "name": "Category",
            "data_type": "string",
            "dimension": "App",
            "dimension_level": "Category"
        },
        {
            "name": "App",
            "data_type": "string",
            "dimension": "App",
            "dimension_level": "App"
        },
        {
            "name": "AppVersionLabel",
            "data_type": "string"
        },
        {
            "name": "AppVersion",
            "data_type": "string",
            "dimension": "App",
            "dimension_level": "Release"
        },
        {
            "name": "StoryPointsPlanned",
            "data_type": "decimal",
            "scale": 2,
            "dimension": "Measures",
            "dimension_member": "StoryPointsPlanned"
        },
        {
            "name": "StoryPointsDelivered",
            "data_type": "decimal",
            "scale": 2,
            "dimension": "Measures",
            "dimension_member": "StoryPointsDelivered"
        }
    ]
}